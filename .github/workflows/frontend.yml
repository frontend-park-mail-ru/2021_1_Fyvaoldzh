name: Docker Build Front

on:
  push:
    branches:
      #- master
      - deploy
  pull_request:
    branches:
      #- master
      - deploy

jobs:
  tests:
    runs-on: ubuntu-latest
    # здесь должен быть линтер. наверное

    steps:
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install deps
        run: npm ci

      - name: Build
        run: npm run build

      - name: Upload build result
        uses: actions/upload-artifact@v1
        with:
          name: dist
          path: ./dist

  build:
    runs-on: ubuntu-latest
    # needs: test
    steps:
      - uses: actions/checkout@v1
      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build Docker image for frontend
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/frontend:${GITHUB_SHA::8} -f Dockerfile .

      - name: Push the image for frontend
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/frontend:${GITHUB_SHA::8}

  deploy:
    if: contains(github.ref, 'deploy')
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: remove docker containers
        uses: appleboy/ssh-action@master
        with:
          envs: GITHUB_SHA
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            sudo docker  ps | grep front |  awk '{print $1}'  | xargs --no-run-if-empty sudo docker stop $(sudo docker ps |grep front| awk '{print $1}')
            sudo docker ps -a | grep front |  awk '{print $1}'  | xargs --no-run-if-empty sudo docker rm $(sudo docker ps -a |grep front| awk '{print $1}')
      - name: pull docker image
        uses: appleboy/ssh-action@master
        with:
          envs: GITHUB_SHA
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/frontend:${GITHUB_SHA::8}
      - name: deploy docker image
        uses: appleboy/ssh-action@master
        with:
          envs: GITHUB_SHA
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            sudo docker run -d -p 3000:3000 --name front ${{ secrets.DOCKERHUB_USERNAME }}/frontend:${GITHUB_SHA::8}

